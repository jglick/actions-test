name: release
on:
  status:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Verify Jenkins status
      run: |
        set -x
        if [ $GITHUB_EVENT_NAME = status ]
        then
          state=$(jq -r .state < $GITHUB_EVENT_PATH)
          context=$(jq -r .context < $GITHUB_EVENT_PATH)
          sha=$(jq -r .sha < $GITHUB_EVENT_PATH)
          if [ $state = success -a $context = continuous-integration/jenkins/branch -a $sha = $GITHUB_SHA ]
          then
            echo passing
          else
            echo not passing, or wrong status
            exit 1
          fi
        elif [ $GITHUB_EVENT_NAME = workflow_dispatch ]
        then
          if curl -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -s $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/statuses | jq -e '.[] | select(.context == "continuous-integration/jenkins/branch" and .state == "success")'
          then
            echo passing
          else
            echo not passing
            exit 1
          fi
        else
          echo unknown event type $GITHUB_EVENT_NAME
          exit 1
        fi
    - name: Check out
      uses: actions/checkout@v1
#    - name: Set up JDK 8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8
    - name: Release
      id: release
      run: bash .github/workflows/release.sh
      env:
#        ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Release notes
      uses: release-drafter/release-drafter@v5
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        name: ${{ steps.release.outputs.version }}
        tag: ${{ steps.release.outputs.version }}
        version: ${{ steps.release.outputs.version }}
        publish: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
